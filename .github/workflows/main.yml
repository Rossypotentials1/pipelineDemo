name: Continuous Integration and Continuous Deployment

on:
  push:
    branches:
      - main
      - master

jobs:
  build-deploy:
    name: CI/CD Docker Pipeline
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17

      - name: Unit Testing
        run: mvn -B test --file pom.xml

      - name: Package and build
        run: mvn clean package --file pom.xml

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u rossypotentials --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t rossypotentials/git-demo:latest .
          docker push rossypotentials/git-demo:latest

      - name: Push to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          dockerfile: Dockerfile
          push: true
          tags: rossypotentials/git-demo:latest







          #name: Continuous Integration and Continuous Deployment
#
#on:
#  push:
#    branches:
#      - main
#      - master
#
#jobs:
#  build-deploy:
#    name: CI/CD Docker Pipeline
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Setup JDK 17
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'corretto'
#          java-version: 17
#
#      - name: Unit Testing
#        run: mvn -B test --file pom.xml
#
#      - name: Package and build
#        run: mvn clean package --file pom.xml
#
#      - name: Build and push Docker image
#        env:
#          DOCKERHUB_ACCESS_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
#        run: |
#            docker login -u  rossypotentials -p $DOCKERHUB_TOKEN
#            docker build -t  rossypotentials/git-demo:latest .
#            docker push  rossypotentials/git-demo:latest

#      - name: Build Docker Image
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          dockerfile: Dockerfile
#          push: true
#          tags: rossypotentials/git-demo:latest
          #docker push

      #      - name: Login to Docker Hub
      #        uses: docker/login-action@v3
      #        with:
      #          username: ${{ secrets.DOCKER_USERNAME }}
      #          password: ${{ secrets.DOCKERHUB_TOKEN }}
      #      - name: Set up Docker Buildx
      #        uses: docker/setup-buildx-action@v3

#      - name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{secrets.DOCKER_USERNAME}}
#          password: ${{secrets.DOCKERHUB_TOKEN}}

#      - name: Push to Docker Hub
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          dockerfile: Dockerfile
#          push: true
#          tags: rossypotentials/git-demo:latest
#
#



















#name: ci
#
#on:
#  push:
#    branches:
#      - main
#      - master
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      -
#        name: Checkout
#        uses: actions/checkout@v4
#      -
#        name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      -
#        name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#      -
#        name: Build and test
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          target: test
#          load: true
#      -
#        name: Build and push
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          push: true
#          target: final
#          tags: ${{ secrets.DOCKER_USERNAME }}/${{ github.event.pipelineDemo }}:latest
##tags: ${{ secrets.DOCKER_USERNAME }}/pipelineDemo:latest
